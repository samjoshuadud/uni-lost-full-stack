UniLostAndFound Project Documentation

1. Project Overview
- A lost and found management system for universities
- Built with Next.js (Frontend) and .NET Core (Backend)
- Uses Firebase/Firestore for database
- Features user authentication and admin roles

2. Core Features
a) User Features:
- Report lost items
- Report found items
- Track pending processes
- Verify item ownership
- View lost and found items
- Cancel requests
- Upload images for items

b) Admin Features:
- Dashboard with statistics
- Approve/reject lost item reports
- Manage found items
- Process verifications
- Track pending retrievals
- View all processes
- Manage item statuses

3. Key Components

Frontend Components:
a) Sections:
- AdminSection
- DashboardSection
- ItemSection
- ReportSection
- ProfileSection
- PendingProcessSection
- StatisticsSection

b) Admin Tabs:
- LostReportsTab
- FoundItemsTab
- VerificationsTab
- PendingProcessesTab
- PendingRetrievalTab

c) Dialogs:
- ReportConfirmDialog
- VerificationDialog
- AuthRequiredDialog

4. Backend Structure

Controllers:
- ItemController
- AuthController

Services:
- FirestoreService
- AdminService

Models:
- Item
- PendingProcess
- UserAccess

5. Item Statuses:
- lost
- found
- in_verification
- pending_retrieval
- handed_over
- pending_approval
- posted
- verification_needed
- pending_verification
- verified

6. Recent Implementations:
- Separated admin dashboard into tabs
- Added statistics section with charts (template)
- Implemented loading states for counts
- Added sorting for pending processes
- Improved UI/UX with better card layouts
- Added image preview in reports
- Implemented process status tracking
- Added verification system

7. UI Features:
- Responsive design
- Loading states
- Error handling
- Empty states
- Status badges
- Image previews
- Modal dialogs
- Toast notifications

8. Security Features:
- User authentication
- Admin role verification
- Protected routes
- Secure API endpoints

9. Data Management:
- Real-time updates
- Sorted by date
- Filtered views
- Status tracking
- Process management

10. Pending Features/Improvements:
- Real statistics data implementation
- Charts implementation
- Email notifications
- Advanced search functionality
- Mobile responsiveness improvements
- More detailed analytics
- Batch processing for admins

11. Technical Stack:
Frontend:
- Next.js
- React
- Tailwind CSS
- shadcn/ui components
- Lucide icons

Backend:
- .NET Core
- Firebase Admin SDK
- Google Cloud Storage

Database:
- Firestore

Authentication:
- Firebase Authentication

Would you like me to expand on any of these sections or add more details?


UniLostAndFound/
├── frontend/
│   ├── app/
│   │   ├── components/
│   │   │   ├── sections/
│   │   │   │   ├── admin-tabs/
│   │   │   │   │   ├── LostReportsTab.js
│   │   │   │   │   ├── FoundItemsTab.js
│   │   │   │   │   ├── VerificationsTab.js
│   │   │   │   │   ├── PendingProcessesTab.js
│   │   │   │   │   ├── PendingRetrievalTab.js
│   │   │   │   │   └── StatisticsSection.js
│   │   │   │   ├── AdminSection.js
│   │   │   │   ├── DashboardSection.js
│   │   │   │   ├── ItemSection.js
│   │   │   │   ├── ReportSection.js
│   │   │   │   ├── ProfileSection.js
│   │   │   │   └── PendingProcessSection.js
│   │   │   ├── dialogs/
│   │   │   │   ├── AuthRequiredDialog.js
│   │   │   │   ├── ReportConfirmDialog.js
│   │   │   │   ├── VerificationDialog.js
│   │   │   │   ├── VerificationSuccessDialog.js
│   │   │   │   └── VerificationFailDialog.js
│   │   │   ├── ui/
│   │   │   │   ├── button.js
│   │   │   │   ├── card.js
│   │   │   │   ├── dialog.js
│   │   │   │   ├── input.js
│   │   │   │   └── ... (other UI components)
│   │   │   └── login-button.js
│   │   ├── lib/
│   │   │   ├── AuthContext.js
│   │   │   └── constants.js
│   │   ├── layout.js
│   │   └── uni-lost-and-found.js
│   └── package.json
│
└── UniLostAndFound.API/
    ├── Controllers/
    │   ├── AuthController.cs
    │   └── ItemController.cs
    ├── Models/
    │   ├── BaseEntity.cs
    │   └── Item.cs
    ├── DTOs/
    │   └── ItemDto.cs
    ├── Services/
    │   ├── FirestoreService.cs
    │   └── AdminService.cs
    └── Program.cs

there are missing structures but thats what the composer last time worked on.